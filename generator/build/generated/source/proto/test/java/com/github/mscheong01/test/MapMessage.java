// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package com.github.mscheong01.test;

/**
 * Protobuf type {@code com.example.test.MapMessage}
 */
public final class MapMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.example.test.MapMessage)
    MapMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MapMessage.newBuilder() to construct.
  private MapMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MapMessage() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MapMessage();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.mscheong01.test.Test.internal_static_com_example_test_MapMessage_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetMapStringString();
      case 2:
        return internalGetMapStringPerson();
      case 3:
        return internalGetMapIntJob();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.mscheong01.test.Test.internal_static_com_example_test_MapMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.mscheong01.test.MapMessage.class, com.github.mscheong01.test.MapMessage.Builder.class);
  }

  public static final int MAP_STRING_STRING_FIELD_NUMBER = 1;
  private static final class MapStringStringDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.github.mscheong01.test.Test.internal_static_com_example_test_MapMessage_MapStringStringEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> mapStringString_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetMapStringString() {
    if (mapStringString_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          MapStringStringDefaultEntryHolder.defaultEntry);
    }
    return mapStringString_;
  }
  public int getMapStringStringCount() {
    return internalGetMapStringString().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; map_string_string = 1;</code>
   */
  @java.lang.Override
  public boolean containsMapStringString(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetMapStringString().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMapStringStringMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
    return getMapStringStringMap();
  }
  /**
   * <code>map&lt;string, string&gt; map_string_string = 1;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
    return internalGetMapStringString().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; map_string_string = 1;</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getMapStringStringOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetMapStringString().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; map_string_string = 1;</code>
   */
  @java.lang.Override
  public java.lang.String getMapStringStringOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetMapStringString().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int MAP_STRING_PERSON_FIELD_NUMBER = 2;
  private static final class MapStringPersonDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.github.mscheong01.test.Person> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.github.mscheong01.test.Person>newDefaultInstance(
                com.github.mscheong01.test.Test.internal_static_com_example_test_MapMessage_MapStringPersonEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.github.mscheong01.test.Person.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, com.github.mscheong01.test.Person> mapStringPerson_;
  private com.google.protobuf.MapField<java.lang.String, com.github.mscheong01.test.Person>
  internalGetMapStringPerson() {
    if (mapStringPerson_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          MapStringPersonDefaultEntryHolder.defaultEntry);
    }
    return mapStringPerson_;
  }
  public int getMapStringPersonCount() {
    return internalGetMapStringPerson().getMap().size();
  }
  /**
   * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
   */
  @java.lang.Override
  public boolean containsMapStringPerson(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetMapStringPerson().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMapStringPersonMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.github.mscheong01.test.Person> getMapStringPerson() {
    return getMapStringPersonMap();
  }
  /**
   * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.github.mscheong01.test.Person> getMapStringPersonMap() {
    return internalGetMapStringPerson().getMap();
  }
  /**
   * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
   */
  @java.lang.Override
  public /* nullable */
com.github.mscheong01.test.Person getMapStringPersonOrDefault(
      java.lang.String key,
      /* nullable */
com.github.mscheong01.test.Person defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.github.mscheong01.test.Person> map =
        internalGetMapStringPerson().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
   */
  @java.lang.Override
  public com.github.mscheong01.test.Person getMapStringPersonOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, com.github.mscheong01.test.Person> map =
        internalGetMapStringPerson().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int MAP_INT_JOB_FIELD_NUMBER = 3;
  private static final class MapIntJobDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                com.github.mscheong01.test.Test.internal_static_com_example_test_MapMessage_MapIntJobEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.ENUM,
                com.github.mscheong01.test.Job.UNKNOWN.getNumber());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.Integer, java.lang.Integer> mapIntJob_;
  private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
  internalGetMapIntJob() {
    if (mapIntJob_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          MapIntJobDefaultEntryHolder.defaultEntry);
    }
    return mapIntJob_;
  }
  private static final
  com.google.protobuf.Internal.MapAdapter.Converter<
      java.lang.Integer, com.github.mscheong01.test.Job> mapIntJobValueConverter =
          com.google.protobuf.Internal.MapAdapter.newEnumConverter(
              com.github.mscheong01.test.Job.internalGetValueMap(),
              com.github.mscheong01.test.Job.UNRECOGNIZED);
  private static final java.util.Map<java.lang.Integer, com.github.mscheong01.test.Job>
  internalGetAdaptedMapIntJobMap(
      java.util.Map<java.lang.Integer, java.lang.Integer> map) {
    return new com.google.protobuf.Internal.MapAdapter<
        java.lang.Integer, com.github.mscheong01.test.Job, java.lang.Integer>(
            map, mapIntJobValueConverter);
  }
  public int getMapIntJobCount() {
    return internalGetMapIntJob().getMap().size();
  }
  /**
   * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
   */
  @java.lang.Override
  public boolean containsMapIntJob(
      int key) {

    return internalGetMapIntJob().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMapIntJobMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.github.mscheong01.test.Job>
  getMapIntJob() {
    return getMapIntJobMap();
  }
  /**
   * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.Integer, com.github.mscheong01.test.Job>
  getMapIntJobMap() {
    return internalGetAdaptedMapIntJobMap(
        internalGetMapIntJob().getMap());}
  /**
   * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
   */
  @java.lang.Override
  public /* nullable */
com.github.mscheong01.test.Job getMapIntJobOrDefault(
      int key,
      /* nullable */
com.github.mscheong01.test.Job defaultValue) {

    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetMapIntJob().getMap();
    return map.containsKey(key)
           ? mapIntJobValueConverter.doForward(map.get(key))
           : defaultValue;
  }
  /**
   * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
   */
  @java.lang.Override
  public com.github.mscheong01.test.Job getMapIntJobOrThrow(
      int key) {

    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetMapIntJob().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return mapIntJobValueConverter.doForward(map.get(key));
  }
  /**
   * Use {@link #getMapIntJobValueMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, java.lang.Integer>
  getMapIntJobValue() {
    return getMapIntJobValueMap();
  }
  /**
   * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.Integer, java.lang.Integer>
  getMapIntJobValueMap() {
    return internalGetMapIntJob().getMap();
  }
  /**
   * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
   */
  @java.lang.Override
  public int getMapIntJobValueOrDefault(
      int key,
      int defaultValue) {

    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetMapIntJob().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
   */
  @java.lang.Override
  public int getMapIntJobValueOrThrow(
      int key) {

    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetMapIntJob().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetMapStringString(),
        MapStringStringDefaultEntryHolder.defaultEntry,
        1);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetMapStringPerson(),
        MapStringPersonDefaultEntryHolder.defaultEntry,
        2);
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetMapIntJob(),
        MapIntJobDefaultEntryHolder.defaultEntry,
        3);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetMapStringString().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      mapStringString__ = MapStringStringDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mapStringString__);
    }
    for (java.util.Map.Entry<java.lang.String, com.github.mscheong01.test.Person> entry
         : internalGetMapStringPerson().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.github.mscheong01.test.Person>
      mapStringPerson__ = MapStringPersonDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mapStringPerson__);
    }
    for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
         : internalGetMapIntJob().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
      mapIntJob__ = MapIntJobDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, mapIntJob__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.mscheong01.test.MapMessage)) {
      return super.equals(obj);
    }
    com.github.mscheong01.test.MapMessage other = (com.github.mscheong01.test.MapMessage) obj;

    if (!internalGetMapStringString().equals(
        other.internalGetMapStringString())) return false;
    if (!internalGetMapStringPerson().equals(
        other.internalGetMapStringPerson())) return false;
    if (!internalGetMapIntJob().equals(
        other.internalGetMapIntJob())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetMapStringString().getMap().isEmpty()) {
      hash = (37 * hash) + MAP_STRING_STRING_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMapStringString().hashCode();
    }
    if (!internalGetMapStringPerson().getMap().isEmpty()) {
      hash = (37 * hash) + MAP_STRING_PERSON_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMapStringPerson().hashCode();
    }
    if (!internalGetMapIntJob().getMap().isEmpty()) {
      hash = (37 * hash) + MAP_INT_JOB_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMapIntJob().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.mscheong01.test.MapMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.mscheong01.test.MapMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.mscheong01.test.MapMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.mscheong01.test.MapMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.mscheong01.test.MapMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.example.test.MapMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.example.test.MapMessage)
      com.github.mscheong01.test.MapMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.mscheong01.test.Test.internal_static_com_example_test_MapMessage_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMapStringString();
        case 2:
          return internalGetMapStringPerson();
        case 3:
          return internalGetMapIntJob();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableMapStringString();
        case 2:
          return internalGetMutableMapStringPerson();
        case 3:
          return internalGetMutableMapIntJob();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.mscheong01.test.Test.internal_static_com_example_test_MapMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.mscheong01.test.MapMessage.class, com.github.mscheong01.test.MapMessage.Builder.class);
    }

    // Construct using com.github.mscheong01.test.MapMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableMapStringString().clear();
      internalGetMutableMapStringPerson().clear();
      internalGetMutableMapIntJob().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.mscheong01.test.Test.internal_static_com_example_test_MapMessage_descriptor;
    }

    @java.lang.Override
    public com.github.mscheong01.test.MapMessage getDefaultInstanceForType() {
      return com.github.mscheong01.test.MapMessage.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.mscheong01.test.MapMessage build() {
      com.github.mscheong01.test.MapMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.mscheong01.test.MapMessage buildPartial() {
      com.github.mscheong01.test.MapMessage result = new com.github.mscheong01.test.MapMessage(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.mscheong01.test.MapMessage result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.mapStringString_ = internalGetMapStringString();
        result.mapStringString_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.mapStringPerson_ = internalGetMapStringPerson();
        result.mapStringPerson_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.mapIntJob_ = internalGetMapIntJob();
        result.mapIntJob_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.mscheong01.test.MapMessage) {
        return mergeFrom((com.github.mscheong01.test.MapMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.mscheong01.test.MapMessage other) {
      if (other == com.github.mscheong01.test.MapMessage.getDefaultInstance()) return this;
      internalGetMutableMapStringString().mergeFrom(
          other.internalGetMapStringString());
      bitField0_ |= 0x00000001;
      internalGetMutableMapStringPerson().mergeFrom(
          other.internalGetMapStringPerson());
      bitField0_ |= 0x00000002;
      internalGetMutableMapIntJob().mergeFrom(
          other.internalGetMapIntJob());
      bitField0_ |= 0x00000004;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              mapStringString__ = input.readMessage(
                  MapStringStringDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableMapStringString().getMutableMap().put(
                  mapStringString__.getKey(), mapStringString__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.google.protobuf.MapEntry<java.lang.String, com.github.mscheong01.test.Person>
              mapStringPerson__ = input.readMessage(
                  MapStringPersonDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableMapStringPerson().getMutableMap().put(
                  mapStringPerson__.getKey(), mapStringPerson__.getValue());
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              mapIntJob__ = input.readMessage(
                  MapIntJobDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableMapIntJob().getMutableMap().put(
                  mapIntJob__.getKey(), mapIntJob__.getValue());
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> mapStringString_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMapStringString() {
      if (mapStringString_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapStringStringDefaultEntryHolder.defaultEntry);
      }
      return mapStringString_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMapStringString() {
      if (mapStringString_ == null) {
        mapStringString_ = com.google.protobuf.MapField.newMapField(
            MapStringStringDefaultEntryHolder.defaultEntry);
      }
      if (!mapStringString_.isMutable()) {
        mapStringString_ = mapStringString_.copy();
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return mapStringString_;
    }
    public int getMapStringStringCount() {
      return internalGetMapStringString().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 1;</code>
     */
    @java.lang.Override
    public boolean containsMapStringString(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMapStringString().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapStringStringMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMapStringString() {
      return getMapStringStringMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getMapStringStringMap() {
      return internalGetMapStringString().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getMapStringStringOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getMapStringStringOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMapStringString().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearMapStringString() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableMapStringString().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 1;</code>
     */
    public Builder removeMapStringString(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableMapStringString().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableMapStringString() {
      bitField0_ |= 0x00000001;
      return internalGetMutableMapStringString().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 1;</code>
     */
    public Builder putMapStringString(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableMapStringString().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; map_string_string = 1;</code>
     */
    public Builder putAllMapStringString(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableMapStringString().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.github.mscheong01.test.Person> mapStringPerson_;
    private com.google.protobuf.MapField<java.lang.String, com.github.mscheong01.test.Person>
        internalGetMapStringPerson() {
      if (mapStringPerson_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapStringPersonDefaultEntryHolder.defaultEntry);
      }
      return mapStringPerson_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.github.mscheong01.test.Person>
        internalGetMutableMapStringPerson() {
      if (mapStringPerson_ == null) {
        mapStringPerson_ = com.google.protobuf.MapField.newMapField(
            MapStringPersonDefaultEntryHolder.defaultEntry);
      }
      if (!mapStringPerson_.isMutable()) {
        mapStringPerson_ = mapStringPerson_.copy();
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return mapStringPerson_;
    }
    public int getMapStringPersonCount() {
      return internalGetMapStringPerson().getMap().size();
    }
    /**
     * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
     */
    @java.lang.Override
    public boolean containsMapStringPerson(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMapStringPerson().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapStringPersonMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.github.mscheong01.test.Person> getMapStringPerson() {
      return getMapStringPersonMap();
    }
    /**
     * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.github.mscheong01.test.Person> getMapStringPersonMap() {
      return internalGetMapStringPerson().getMap();
    }
    /**
     * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
com.github.mscheong01.test.Person getMapStringPersonOrDefault(
        java.lang.String key,
        /* nullable */
com.github.mscheong01.test.Person defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.github.mscheong01.test.Person> map =
          internalGetMapStringPerson().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
     */
    @java.lang.Override
    public com.github.mscheong01.test.Person getMapStringPersonOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.github.mscheong01.test.Person> map =
          internalGetMapStringPerson().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearMapStringPerson() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableMapStringPerson().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
     */
    public Builder removeMapStringPerson(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableMapStringPerson().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.github.mscheong01.test.Person>
        getMutableMapStringPerson() {
      bitField0_ |= 0x00000002;
      return internalGetMutableMapStringPerson().getMutableMap();
    }
    /**
     * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
     */
    public Builder putMapStringPerson(
        java.lang.String key,
        com.github.mscheong01.test.Person value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableMapStringPerson().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>map&lt;string, .com.example.test.Person&gt; map_string_person = 2;</code>
     */
    public Builder putAllMapStringPerson(
        java.util.Map<java.lang.String, com.github.mscheong01.test.Person> values) {
      internalGetMutableMapStringPerson().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> mapIntJob_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
        internalGetMapIntJob() {
      if (mapIntJob_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapIntJobDefaultEntryHolder.defaultEntry);
      }
      return mapIntJob_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
        internalGetMutableMapIntJob() {
      if (mapIntJob_ == null) {
        mapIntJob_ = com.google.protobuf.MapField.newMapField(
            MapIntJobDefaultEntryHolder.defaultEntry);
      }
      if (!mapIntJob_.isMutable()) {
        mapIntJob_ = mapIntJob_.copy();
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return mapIntJob_;
    }
    public int getMapIntJobCount() {
      return internalGetMapIntJob().getMap().size();
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    @java.lang.Override
    public boolean containsMapIntJob(
        int key) {

      return internalGetMapIntJob().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapIntJobMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.github.mscheong01.test.Job>
    getMapIntJob() {
      return getMapIntJobMap();
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.github.mscheong01.test.Job>
    getMapIntJobMap() {
      return internalGetAdaptedMapIntJobMap(
          internalGetMapIntJob().getMap());}
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    @java.lang.Override
    public /* nullable */
com.github.mscheong01.test.Job getMapIntJobOrDefault(
        int key,
        /* nullable */
com.github.mscheong01.test.Job defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapIntJob().getMap();
      return map.containsKey(key)
             ? mapIntJobValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    @java.lang.Override
    public com.github.mscheong01.test.Job getMapIntJobOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapIntJob().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return mapIntJobValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getMapIntJobValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapIntJobValue() {
      return getMapIntJobValueMap();
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMapIntJobValueMap() {
      return internalGetMapIntJob().getMap();
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    @java.lang.Override
    public int getMapIntJobValueOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapIntJob().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    @java.lang.Override
    public int getMapIntJobValueOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMapIntJob().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearMapIntJob() {
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableMapIntJob().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    public Builder removeMapIntJob(
        int key) {

      internalGetMutableMapIntJob().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.github.mscheong01.test.Job>
        getMutableMapIntJob() {
      bitField0_ |= 0x00000004;
      return internalGetAdaptedMapIntJobMap(
           internalGetMutableMapIntJob().getMutableMap());
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    public Builder putMapIntJob(
        int key,
        com.github.mscheong01.test.Job value) {


      internalGetMutableMapIntJob().getMutableMap()
          .put(key, mapIntJobValueConverter.doBackward(value));
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    public Builder putAllMapIntJob(
        java.util.Map<java.lang.Integer, com.github.mscheong01.test.Job> values) {
      internalGetAdaptedMapIntJobMap(
          internalGetMutableMapIntJob().getMutableMap())
              .putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMutableMapIntJobValue() {
      bitField0_ |= 0x00000004;
      return internalGetMutableMapIntJob().getMutableMap();
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    public Builder putMapIntJobValue(
        int key,
        int value) {


      internalGetMutableMapIntJob().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>map&lt;int32, .com.example.test.Job&gt; map_int_job = 3;</code>
     */
    public Builder putAllMapIntJobValue(
        java.util.Map<java.lang.Integer, java.lang.Integer> values) {
      internalGetMutableMapIntJob().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.example.test.MapMessage)
  }

  // @@protoc_insertion_point(class_scope:com.example.test.MapMessage)
  private static final com.github.mscheong01.test.MapMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.mscheong01.test.MapMessage();
  }

  public static com.github.mscheong01.test.MapMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MapMessage>
      PARSER = new com.google.protobuf.AbstractParser<MapMessage>() {
    @java.lang.Override
    public MapMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MapMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MapMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.mscheong01.test.MapMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

