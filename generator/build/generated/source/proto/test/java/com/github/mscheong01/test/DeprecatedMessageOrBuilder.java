// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package com.github.mscheong01.test;

public interface DeprecatedMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.example.test.DeprecatedMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string name = 1 [deprecated = true];</code>
   * @deprecated com.example.test.DeprecatedMessage.name is deprecated.
   *     See test.proto;l=102
   * @return The name.
   */
  @java.lang.Deprecated java.lang.String getName();
  /**
   * <code>string name = 1 [deprecated = true];</code>
   * @deprecated com.example.test.DeprecatedMessage.name is deprecated.
   *     See test.proto;l=102
   * @return The bytes for name.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>string oneof_string = 2 [deprecated = true];</code>
   * @deprecated com.example.test.DeprecatedMessage.oneof_string is deprecated.
   *     See test.proto;l=104
   * @return Whether the oneofString field is set.
   */
  @java.lang.Deprecated boolean hasOneofString();
  /**
   * <code>string oneof_string = 2 [deprecated = true];</code>
   * @deprecated com.example.test.DeprecatedMessage.oneof_string is deprecated.
   *     See test.proto;l=104
   * @return The oneofString.
   */
  @java.lang.Deprecated java.lang.String getOneofString();
  /**
   * <code>string oneof_string = 2 [deprecated = true];</code>
   * @deprecated com.example.test.DeprecatedMessage.oneof_string is deprecated.
   *     See test.proto;l=104
   * @return The bytes for oneofString.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getOneofStringBytes();

  /**
   * <code>int32 oneof_int = 3;</code>
   * @return Whether the oneofInt field is set.
   */
  boolean hasOneofInt();
  /**
   * <code>int32 oneof_int = 3;</code>
   * @return The oneofInt.
   */
  int getOneofInt();

  /**
   * <code>.com.example.test.Person oneof_person = 4;</code>
   * @return Whether the oneofPerson field is set.
   */
  boolean hasOneofPerson();
  /**
   * <code>.com.example.test.Person oneof_person = 4;</code>
   * @return The oneofPerson.
   */
  com.github.mscheong01.test.Person getOneofPerson();
  /**
   * <code>.com.example.test.Person oneof_person = 4;</code>
   */
  com.github.mscheong01.test.PersonOrBuilder getOneofPersonOrBuilder();

  com.github.mscheong01.test.DeprecatedMessage.OneofFieldCase getOneofFieldCase();
}
